name: Compile and Execute

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build, Execute, and Archive
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Install C++ compiler
    - name: Install C++ Compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y g++

    # Compile and execute C++ files
    - name: Compile and Execute C++ files
      run: |
        mkdir -p build/cpp
        for file in $(find . -name "*.cpp"); do
          g++ $file -o build/cpp/$(basename $file .cpp)
          ./build/cpp/$(basename $file .cpp)
        done

    # Install Kotlin compiler
    - name: Install Kotlin Compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y default-jdk
        curl -s https://get.sdkman.io | bash
        source "$HOME/.sdkman/bin/sdkman-init.sh"
        sdk install kotlin

    # Compile and execute Kotlin files
    - name: Compile and Execute Kotlin files
      run: |
        mkdir -p build/kotlin
        for file in $(find . -name "*.kt"); do
          kotlinc $file -include-runtime -d build/kotlin/$(basename $file .kt).jar
          java -jar build/kotlin/$(basename $file .kt).jar
        done

    # Install c# compiler
    - name: Install c# compiler
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    # Compile and execute C# files
    - name: Compile and Execute C# files
      run: |
        mkdir -p build/cs
        for file in $(find . -name "*.cs"); do
          project_name=$(basename $file .cs)
          mkdir -p build/cs/$project_name
          dotnet new console -n $project_name -o build/cs/$project_name
          mv $file build/cs/$project_name/Program.cs
          cd build/cs/$project_name
          dotnet run
          cd -
        done